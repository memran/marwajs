<template>
  <main class="wrap">
    <!-- Background decorations -->
    <div class="bg">
      <div class="blob b1" aria-hidden="true"></div>
      <div class="blob b2" aria-hidden="true"></div>
      <div class="grid" aria-hidden="true"></div>
    </div>

    <!-- Header / brand -->
    <header class="header">
      <div class="brand">
        <span class="logo">MW</span>
        <div class="titles">
          <h1>MarwaJS</h1>
          <p class="subtitle">Tiny ‚Ä¢ Fast ‚Ä¢ DX‚Äëfirst</p>
        </div>
      </div>
      <nav class="links">
        <a
          class="link"
          href="https://github.com/memran"
          target="_blank"
          rel="noopener"
          >GitHub</a
        >
        <a
          class="link"
          href="https://npmjs.com/org/marwajs"
          target="_blank"
          rel="noopener"
          >NPM</a
        >
        <a
          class="link"
          href="https://example.com/docs"
          target="_blank"
          rel="noopener"
          >Docs</a
        >
      </nav>
    </header>

    <!-- Hero -->
    <section class="hero card">
      <h2>Welcome üëã</h2>
      <p>
        You're running the <strong>MarwaJS dev server</strong>. Build snappy
        apps with <em>signals</em>, single‚Äëfile <code>.marwa</code> components,
        and a tiny runtime.
      </p>
      <div class="cta">
        <RouterLink class="btn primary" to="/about"
          >Open sample page</RouterLink
        >
        <a class="btn ghost" href="/play">Try playground</a>
      </div>
      <p class="hint">
        Tip: Edit <code>src/pages/Welcome.marwa</code> and save ‚Äî hot reload
        will do the rest.
      </p>
    </section>

    <!-- Quick start tiles -->
    <section class="tiles">
      <article class="tile card">
        <h3>Create a page</h3>
        <p>
          Add <code>src/pages/Hello.marwa</code> and register in
          <code>router.ts</code>.
        </p>
        <pre><code>defineRoutes([
  { path: '/', component: () => import('./pages/Welcome.marwa') },
  { path: '/hello', component: () => import('./pages/Hello.marwa') },
  { path: '*', component: () => import('./pages/NotFound.marwa') },
])</code></pre>
      </article>

      <article class="tile card">
        <h3>Use signals</h3>
        <p>State is simple and fast.</p>
        <pre><code>import { signal } from '@marwajs/core'
const count = signal(0)
&lt;button @click="count.set(count()+1)"&gt;{{ count() }}&lt;/button&gt;</code></pre>
      </article>

      <article class="tile card">
        <h3>Link &amp; Layouts</h3>
        <p>
          <code>&lt;RouterLink/&gt;</code> for SPA links and
          <code>&lt;RouterView/&gt;</code> for nested layouts.
        </p>
        <pre><code>&lt;RouterLink to="/hello"&gt;Say hi&lt;/RouterLink&gt;
&lt;RouterView/&gt;</code></pre>
      </article>

      <article class="tile card">
        <h3>Directives</h3>
        <p>Minimal directive set for common cases.</p>
        <ul class="list">
          <li><code>:text</code> / <code>:html</code> ‚Äî bind content</li>
          <li><code>:show</code> ‚Äî toggle visibility</li>
          <li><code>:class</code> / <code>:style</code> ‚Äî style reactively</li>
          <li><code>m-model</code> ‚Äî two‚Äëway inputs</li>
          <li><code>@click</code> ‚Äî events (with modifiers)</li>
        </ul>
      </article>
    </section>

    <!-- Project scaffold -->
    <section class="structure card">
      <h3>Project structure</h3>
      <pre><code>src/
  App.marwa        # root shell (has &lt;RouterView/&gt;)
  router.ts        # createRouter(defineRoutes([...]))
  pages/
    Welcome.marwa  # this page
    About.marwa
    NotFound.marwa
  components/
    Counter.marwa
  services/
    http.ts        # fetch wrapper / interceptors
public/
  favicon.svg
      </code></pre>
    </section>

    <!-- Footer tips -->
    <footer class="footer">
      <div class="kbd">
        <span>‚åò/Ctrl</span> + <span>S</span> ‚Äî Save &amp; hot reload
      </div>
      <div class="note">Made with ‚ù§Ô∏è for tiny bundles. Enjoy the flow.</div>
    </footer>
  </main>
</template>

<script setup>
  // Nothing heavy here ‚Äî keep the welcome screen zero‚Äëlogic for tiny bundles.
  // RouterLink is globally available in MarwaJS builds; uncomment if your setup needs explicit import.
  // import { RouterLink } from '@marwajs/core'
</script>

<style scoped>
  :root {
    --bg: #0b0f17;
    --panel: #0f1522;
    --card: #121a2a;
    --text: #e6eefc;
    --muted: #9db0d1;
    --brandA: #7c3aed; /* purple */
    --brandB: #06b6d4; /* cyan */
    --ok: #22c55e;
    --border: rgba(255, 255, 255, 0.08);
  }
  * {
    box-sizing: border-box;
  }
  html,
  body,
  .wrap {
    height: 100%;
  }
  body {
    margin: 0;
    font-family: ui-sans-serif, system-ui, -apple-system, Segoe UI, Roboto,
      Inter, "Helvetica Neue", Arial, "Noto Sans", "Apple Color Emoji",
      "Segoe UI Emoji";
    background: var(--bg);
    color: var(--text);
  }

  .wrap {
    position: relative;
    padding: 24px;
    max-width: 1100px;
    margin: 0 auto;
    display: grid;
    gap: 20px;
    grid-template-rows: auto auto auto 1fr auto;
  }

  /* Decorative background */
  .bg {
    position: fixed;
    inset: 0;
    overflow: hidden;
    pointer-events: none;
    z-index: -1;
    background: radial-gradient(
        1200px 600px at 10% -10%,
        rgba(124, 58, 237, 0.18),
        transparent
      ),
      radial-gradient(
        1000px 500px at 100% 0%,
        rgba(6, 182, 212, 0.15),
        transparent
      );
  }
  .blob {
    position: absolute;
    filter: blur(60px);
    opacity: 0.4;
  }
  .blob.b1 {
    width: 600px;
    height: 600px;
    background: radial-gradient(
      circle at 30% 30%,
      var(--brandA),
      transparent 60%
    );
    left: -120px;
    top: -140px;
    animation: float 18s ease-in-out infinite;
  }
  .blob.b2 {
    width: 520px;
    height: 520px;
    background: radial-gradient(
      circle at 70% 40%,
      var(--brandB),
      transparent 60%
    );
    right: -140px;
    top: -100px;
    animation: float 22s ease-in-out infinite reverse;
  }
  .grid {
    position: absolute;
    inset: 0;
    background-image: linear-gradient(
        to right,
        rgba(255, 255, 255, 0.06) 1px,
        transparent 1px
      ),
      linear-gradient(to bottom, rgba(255, 255, 255, 0.06) 1px, transparent 1px);
    background-size: 40px 40px;
    mask-image: radial-gradient(
      800px 400px at 50% -10%,
      black,
      transparent 70%
    );
  }
  @keyframes float {
    0%,
    100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(12px);
    }
  }
  @media (prefers-reduced-motion: reduce) {
    .blob {
      animation: none;
    }
  }

  /* Header */
  .header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 12px 16px;
    border: 1px solid var(--border);
    border-radius: 16px;
    background: linear-gradient(
      180deg,
      rgba(255, 255, 255, 0.04),
      rgba(255, 255, 255, 0.02)
    );
    backdrop-filter: blur(6px);
  }
  .brand {
    display: flex;
    align-items: center;
    gap: 12px;
  }
  .logo {
    display: grid;
    place-items: center;
    width: 40px;
    height: 40px;
    border-radius: 12px;
    background: linear-gradient(135deg, var(--brandA), var(--brandB));
    font-weight: 800;
    letter-spacing: 0.5px;
    color: white;
    box-shadow: 0 8px 24px rgba(124, 58, 237, 0.35),
      0 6px 18px rgba(6, 182, 212, 0.25);
  }
  .titles h1 {
    margin: 0;
    font-size: 20px;
  }
  .subtitle {
    margin: 2px 0 0;
    color: var(--muted);
    font-size: 12px;
    letter-spacing: 0.3px;
  }
  .links {
    display: flex;
    gap: 10px;
  }
  .link {
    color: var(--text);
    text-decoration: none;
    padding: 8px 12px;
    border: 1px solid var(--border);
    border-radius: 10px;
    font-size: 13px;
    opacity: 0.85;
  }
  .link:hover {
    opacity: 1;
    border-color: rgba(255, 255, 255, 0.18);
  }

  /* Cards */
  .card {
    background: linear-gradient(
      180deg,
      rgba(18, 26, 42, 0.9),
      rgba(18, 26, 42, 0.75)
    );
    border: 1px solid var(--border);
    border-radius: 16px;
    padding: 20px;
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.25);
  }
  .card h2,
  .card h3 {
    margin-top: 0;
  }

  /* Hero */
  .hero {
    text-align: center;
  }
  .hero p {
    color: var(--muted);
  }
  .cta {
    display: flex;
    gap: 10px;
    justify-content: center;
    margin: 16px 0 6px;
    flex-wrap: wrap;
  }
  .btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    height: 40px;
    padding: 0 16px;
    border-radius: 10px;
    border: 1px solid var(--border);
    text-decoration: none;
    color: var(--text);
    font-weight: 600;
  }
  .btn.primary {
    background: linear-gradient(135deg, var(--brandA), var(--brandB));
    box-shadow: 0 10px 30px rgba(124, 58, 237, 0.35),
      0 8px 24px rgba(6, 182, 212, 0.25);
  }
  .btn.ghost {
    background: transparent;
  }
  .hint {
    margin: 12px 0 0;
    font-size: 13px;
    color: var(--muted);
  }

  /* Tiles */
  .tiles {
    display: grid;
    grid-template-columns: repeat(12, 1fr);
    gap: 16px;
  }
  .tile {
    grid-column: span 6;
  }
  .tile pre {
    margin: 10px 0 0;
    background: #0d1320;
    border: 1px solid var(--border);
    border-radius: 12px;
    padding: 12px;
    overflow: auto;
  }
  .tile .list {
    margin: 8px 0 0 0;
    padding-left: 16px;
    color: var(--muted);
  }
  .tile code,
  .structure code {
    color: #c7d2fe;
  }
  @media (max-width: 900px) {
    .tile {
      grid-column: span 12;
    }
  }

  /* Structure */
  .structure pre {
    background: #0d1320;
    border: 1px solid var(--border);
    border-radius: 12px;
    padding: 12px;
    overflow: auto;
  }

  /* Footer */
  .footer {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 12px;
    padding: 12px 16px;
    border: 1px solid var(--border);
    border-radius: 16px;
    background: linear-gradient(
      180deg,
      rgba(255, 255, 255, 0.04),
      rgba(255, 255, 255, 0.02)
    );
    color: var(--muted);
    font-size: 13px;
  }
  .kbd span {
    display: inline-block;
    padding: 2px 6px;
    border: 1px solid var(--border);
    border-bottom-width: 3px;
    border-radius: 6px;
    background: #0b1222;
    color: var(--text);
    margin: 0 4px;
    font-weight: 700;
  }
</style>
