import { glob } from 'glob';
import fs from 'node:fs';
import path from 'node:path';

export async function generateRoutes(srcDir: string, outFile: string) {
  const files = await glob('**/*.marwa', { cwd: srcDir, absolute: true });
  const lines: string[] = [];
  lines.push(`// generated by @marwajs/compiler`);
  lines.push(`export const routes = [`);
  for (const f of files) {
    const rel = './' + path.relative(path.dirname(outFile), f).replace(/\\/g,'/');
    const name = path.basename(f, '.marwa');
    lines.push(`  { path: ${JSON.stringify(routePathFromFile(name))}, component: (await import(${JSON.stringify(rel)})).default, meta: (await import(${JSON.stringify(rel)})).__route || {} },`);
  }
  lines.push(`] as const;`);
  await fs.promises.mkdir(path.dirname(outFile), { recursive: true });
  await fs.promises.writeFile(outFile, lines.join('\n'), 'utf8');
}

function routePathFromFile(name: string){
  if (name.toLowerCase()==='home' || name.toLowerCase()==='index') return '/';
  return '/' + name.toLowerCase().replace(/_/g,'-');
}
